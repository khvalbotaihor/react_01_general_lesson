{"version":3,"sources":["serviceWorker.ts","components/Acccordion/Accordion.tsx","components/Rating/Rating.tsx","App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","AccordionTitle","props","console","log","title","AccordionBody","Accordion","collapsed","titleValue","Rating","value","Star","selected","PageTitle","App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b6458a93.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\n\r\ntype AccordionPropsType = {\r\n    titleValue: string\r\n    collapsed: boolean\r\n}\r\n\r\nfunction Accordion(props:AccordionPropsType) {\r\n    console.log(\"Accordion rendering\");\r\n    if(props.collapsed === false){\r\n        return (\r\n            <div>\r\n                <AccordionTitle title={props.titleValue}/>\r\n                <AccordionBody/>\r\n            </div>\r\n        )\r\n    }else {\r\n        return (\r\n            <div>\r\n                <AccordionTitle title={props.titleValue}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\ntype AccordionTitlePropsType = {\r\n    title: string\r\n}\r\n\r\nfunction AccordionTitle(props:AccordionTitlePropsType) {\r\n    console.log(\"AccordionTitle rendering\");\r\n    return (\r\n        <h3>{props.title}</h3>\r\n    )\r\n}\r\n\r\nfunction AccordionBody() {\r\n    console.log(\"AccordionBody rendering\");\r\n    return (\r\n            <ul>\r\n                <li>1</li>\r\n                <li>2</li>\r\n                <li>3</li>\r\n            </ul>\r\n    )\r\n}\r\n\r\nexport default Accordion;","import React from \"react\";\r\n\r\ntype RatingPropsType = {\r\n    value: 0|1|2|3|4|5\r\n}\r\nexport function Rating(props:RatingPropsType) {\r\n    console.log(\"Rating rendering\");\r\n\r\n    if(props.value===0){\r\n        return (\r\n            <div>\r\n                <Star selected={false}/>\r\n                <Star selected={false}/>\r\n                <Star selected={false}/>\r\n                <Star selected={false}/>\r\n                <Star selected={false}/>\r\n            </div>\r\n        )\r\n    }\r\n    if(props.value===1){\r\n        return (\r\n            <div>\r\n                <Star selected={true}/>\r\n                <Star selected={false}/>\r\n                <Star selected={false}/>\r\n                <Star selected={false}/>\r\n                <Star selected={false}/>\r\n            </div>\r\n        )\r\n    }\r\n    if(props.value===2){\r\n        return (\r\n            <div>\r\n                <Star selected={true}/>\r\n                <Star selected={true}/>\r\n                <Star selected={false}/>\r\n                <Star selected={false}/>\r\n                <Star selected={false}/>\r\n            </div>\r\n        )\r\n    }\r\n    if(props.value===3){\r\n        return (\r\n            <div>\r\n                <Star selected={true}/>\r\n                <Star selected={true}/>\r\n                <Star selected={true}/>\r\n                <Star selected={false}/>\r\n                <Star selected={false}/>\r\n            </div>\r\n        )\r\n    }\r\n    if(props.value===4){\r\n        return (\r\n            <div>\r\n                <Star selected={true}/>\r\n                <Star selected={true}/>\r\n                <Star selected={true}/>\r\n                <Star selected={true}/>\r\n                <Star selected={false}/>\r\n            </div>\r\n        )\r\n    }\r\n    if(props.value===5){\r\n        return (\r\n            <div>\r\n                <Star selected={true}/>\r\n                <Star selected={true}/>\r\n                <Star selected={true}/>\r\n                <Star selected={true}/>\r\n                <Star selected={true}/>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            <Star selected={false}/>\r\n            <Star selected={false}/>\r\n            <Star selected={false}/>\r\n            <Star selected={false}/>\r\n            <Star selected={false}/>\r\n        </div>\r\n    )\r\n}\r\n\r\ntype StarPropsType = {\r\n    selected: boolean\r\n}\r\n\r\nfunction Star(props:StarPropsType) {\r\n    console.log(\"Start rendering\")\r\n\r\n    if(props.selected===true){\r\n        return <span><b>start</b> </span>\r\n    }else {\r\n        return <span>start</span>\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport Accordion from \"./components/Acccordion/Accordion\";\nimport {Rating} from \"./components/Rating/Rating\";\n\n\nfunction sum(a:number,b:number) {\n    alert(a+b)\n}\n\n/*sum(3,4);\nsum(100,333);*/\n\n// function declaration - ми будемо використовувати для обявления компонент\nfunction App() {\n    console.log(\"App rendering\")\n\n    // ми здесь должни делать штото полезное\n    //  и в конце функция обязана вернуть JSX\n    //бейбел траспілятор перетворює JSX в обичний JS код\n\n    return (\n        <div>\n            <PageTitle title={\"This is App component\"}/>\n            <PageTitle title={\"My friends\"}/>\n            Article 1\n            <Rating value={3}/>\n            <Accordion titleValue={\"Menu\"} collapsed={true}/>\n            <Accordion titleValue={\"Users\"} collapsed={false}/>\n            Article 2\n            <Rating value={0}/>\n            <Rating value={1}/>\n            <Rating value={2}/>\n            <Rating value={3}/>\n            <Rating value={4}/>\n            <Rating value={5}/>\n        </div>\n    );\n}\n\ntype PageTitlePropsType = {\n    title: string\n}\n\nfunction PageTitle(props:PageTitlePropsType) {\n    console.log(\"PageTitle rendering\");\n\n    return (\n        <h1>{props.title}</h1>\n    )\n}\n\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from \"./App\";\n\nReactDOM.render(<App />,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}